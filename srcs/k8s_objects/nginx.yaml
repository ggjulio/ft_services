apiVersion: v1
kind: Service
metadata:
  name: nginx
  labels:
    app: nginx
    env: learning
  annotations:
    metallb.universe.tf/allow-shared-ip: "ft_services"
spec:
  type: LoadBalancer
  ports:
    - name: http
      port: 80
      targetPort: 80
    - name: https
      port: 443
      targetPort: 443
  selector:
    app: nginx

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: nginx
    env: learning
  name: nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
        env: learning
    spec:
      volumes:
        - name: nginx-config
          configMap:
              name: nginx-config
        - name: telegraf-nginx-configmap
          configMap:
              name: telegraf-nginx-configmap
        - name: nginx-logs
          emptyDir: {}
      containers:
      - name: nginx
        image: my-nginx
        imagePullPolicy: Never
        command:
          - 'sh'
          - '-c'
          - 'echo "Pod : $HOSTNAME" >> /var/www/app/index.html; nginx -g "daemon off;"'
        ports:
        - containerPort: 80
          name : http
        - containerPort: 443
          name : https
        volumeMounts:
          - mountPath: /etc/nginx/conf.d/
            name: nginx-config
            readOnly: true
          - mountPath: /var/log/nginx/
            name: nginx-logs

      - name: telegraf
        image: my-telegraf
        imagePullPolicy: Never
        env:
        - name: MONITOR_HOST
          value: http://influxdb:8086
        - name: MONITOR_USERNAME
          valueFrom:
            secretKeyRef:
              name: influxdb-secrets
              key: INFLUXDB_USER
        - name: MONITOR_PASSWORD
          valueFrom:
            secretKeyRef:
              name: influxdb-secrets
              key: INFLUXDB_USER_PASSWORD
        - name: MONITOR_DATABASE
          valueFrom:
            secretKeyRef:
              name: influxdb-secrets
              key: INFLUXDB_DB
        volumeMounts:
        - name: telegraf-nginx-configmap
          mountPath: /etc/telegraf
        - mountPath: /var/log/nginx/
          name: nginx-logs
          readOnly: true

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  labels:
    app: nginx
    env: learning 
data:
  default.conf: |
    server {
     listen 127.0.0.1:80;
     
        location /nginx_status {
            auth_request off;
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            deny all;
        }
    }

    server {
        listen 80 default_server;   #to listen on 80 in ipv4
        listen [::]:80 default_server;   #to listen on 80 in ipv6
        return 301 https://$host$request_uri; #redirect http -> https
    }

    server {
        listen 443 ssl;     # http2; http2 not supported for reverse proxy
        listen [::]:443 ssl; # http2;
        server_name _;
        
        ssl_certificate      /etc/ssl/certs/nginx-selfsigned.crt;
        ssl_certificate_key  /etc/ssl/private/nginx-selfsigned.key;
        ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers          HIGH:!aNULL:!MD5;

        error_page		497	https://$host:443$request_uri;   #redirect  when 400 code error

        root /var/www/app;
        index index.html;
        location / {
            try_files $uri $uri/ =404;
        }

        location /wordpress {
            return 307 https://$host:5050;
        }

        location /grafana {
            return 307 http://$host:3000;
        }

        location /phpmyadmin/ {
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-Proto https;
            proxy_pass https://phpmyadmin:5000/;
        }
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: telegraf-nginx-configmap
  labels:
    app: nginx
    env: learning
data:
  telegraf.conf: |
    [global_tags]
      project = "ft_services"
    [agent]
      hostname = "${HOSTNAME}"
      # debug = true
      # quiet = false
    #################### OUTPUT ###########################
    [[outputs.influxdb]]
      urls = ["${MONITOR_HOST}"]
      database = "${MONITOR_DATABASE}" 
      username = "${MONITOR_USERNAME}"
      password = "${MONITOR_PASSWORD}"
      timeout = "5s"
      
    ##################### INPUTS ##########################
    # Read Nginx's basic status information (ngx_http_stub_status_module)
    [[inputs.nginx]]
    ## An array of Nginx stub_status URI to gather stats.
      urls = ["http://127.0.0.1/nginx_status"]

    ## Optional TLS Config
    # tls_ca = "/etc/telegraf/ca.pem"
    # tls_cert = "/etc/telegraf/cert.pem"
    # tls_key = "/etc/telegraf/key.pem"
    ## Use TLS but skip chain & host verification
    # insecure_skip_verify = false

    ## HTTP response timeout (default: 5s)
      response_timeout = "5s"
    

    # Collect nginx access logs
    [[inputs.tail]]
      files = ["/var/log/nginx/access.log"] 
      from_beginning = false
      ## Whether file is a named pipe
      pipe = false
      name_prefix = "nginx_access_logs."

      data_format = "grok"
      grok_patterns = ["%{COMBINED_LOG_FORMAT}"]
