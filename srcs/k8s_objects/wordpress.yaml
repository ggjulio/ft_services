apiVersion: v1
kind: Service
metadata:
  name: wordpress
  labels:
    app: wordpress
    env: learning
  annotations:
    metallb.universe.tf/allow-shared-ip: "ft_services"
spec:
  type: LoadBalancer
  ports:
    - name: https
      port: 5050
      targetPort: 443
  selector:
    app: wordpress
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: wp-pv-claim
  labels:
    app: wordpress
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: wordpress
    env: learning
  name: wordpress
spec:
  replicas: 1
  selector:
    matchLabels:
      app: wordpress
  template:
    metadata:
      labels:
        app: wordpress
        env: learning
    spec:
      volumes:
        - name: nginx-config-wordpress
          configMap:
              name: nginx-config-wordpress
        - name: wordpress-config
          configMap:
              name: wordpress-config
        - name: workdir-persistent-storage
          persistentVolumeClaim:
              claimName: wp-pv-claim
      containers:
        - name: nginx
          image: my-nginx
          imagePullPolicy: Never
          ports:
          - containerPort: 443
            name : https
          volumeMounts:
            - mountPath: /etc/nginx/conf.d/
              name: nginx-config-wordpress
              readOnly: true
            - name: workdir-persistent-storage
              mountPath: /var/www/app
        - name: php-fpm
          image: my-php-fpm
          imagePullPolicy: Never
          ports:
          - containerPort: 9000
            name : tcp
          volumeMounts:
            - name: workdir-persistent-storage
              mountPath: /var/www/app
      initContainers:
        - name: install-wp
          image: alpine
          command: ['sh', '-c',
          ' if [ "$(ls -A /work-dir)" ]; then echo "wordpress already downloaded"; exit 0; fi; echo "Persistent volume empty, downloading wordpress...";
            wget -q -O - https://github.com/WordPress/WordPress/archive/5.6.tar.gz | tar -xz -C /work-dir/ --strip-components=1;
            cp -f /wp-config/wp-config.php /work-dir;
            echo "Done."
          ']
          volumeMounts:
            - name: workdir-persistent-storage
              mountPath: "/work-dir"
            - name: wordpress-config
              mountPath: "/wp-config"
        - name: wait-for-mysql
          image: alpine
          command: ['sh', '-c', 
          ' until nslookup mysql.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for myservice; sleep 2; done']
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config-wordpress
  labels:
    app: wordpress
    env: learning 
data:
  default.conf: |
    # Upstream to abstract backend connection(s) for php
    upstream php {
        # server unix:/tmp/php-cgi.socket;
        server 127.0.0.1:9000;
    }

    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;

        ssl_certificate      /etc/ssl/certs/nginx-selfsigned.crt;
        ssl_certificate_key  /etc/ssl/private/nginx-selfsigned.key;
        ssl_protocols        SSLv3 TLSv1.3;
        ssl_ciphers          HIGH:!aNULL:!MD5;

        error_page		497	https://$host:5050$request_uri;   #redirect  when 400 code error

        root /var/www/app;
        index index.php index.html;

        location / {
          try_files $uri $uri/ =404;
        }

        location ~ \.php$ {
          include fastcgi_params;
          fastcgi_intercept_errors on;
          fastcgi_pass php;
          fastcgi_param  SCRIPT_FILENAME $document_root$fastcgi_script_name;
        }

    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: wordpress-config
  labels:
    app: wordpress
    env: learning 
data:
  wp-config.php: |
    <?php
    /**
    * The base configuration for WordPress
    *
    * The wp-config.php creation script uses this file during the
    * installation. You don't have to use the web site, you can
    * copy this file to "wp-config.php" and fill in the values.
    *
    * This file contains the following configurations:
    *
    * * MySQL settings
    * * Secret keys
    * * Database table prefix
    * * ABSPATH
    *
    * @link https://wordpress.org/support/article/editing-wp-config-php/
    *
    * @package WordPress
    */

    // ** MySQL settings - You can get this info from your web host ** //
    /** The name of the database for WordPress */
    define( 'DB_NAME', 'wordpress' );

    /** MySQL database username */
    define( 'DB_USER', 'wordpress' );

    /** MySQL database password */
    define( 'DB_PASSWORD', 'wordpress' );

    /** MySQL hostname */
    define( 'DB_HOST', 'mysql' );

    /** Database Charset to use in creating database tables. */
    define( 'DB_CHARSET', 'utf8' );

    /** The Database Collate type. Don't change this if in doubt. */
    define( 'DB_COLLATE', '' );

    /**#@+
    * Authentication Unique Keys and Salts.
    *
    * Change these to different unique phrases!
    * You can generate these using the {@link https://api.wordpress.org/secret-key/1.1/salt/ WordPress.org secret-key service}
    * You can change these at any point in time to invalidate all existing cookies. This will force all users to have to log in again.
    *
    * @since 2.6.0
    */
    define( 'AUTH_KEY',         'put your unique phrase here' );
    define( 'SECURE_AUTH_KEY',  'put your unique phrase here' );
    define( 'LOGGED_IN_KEY',    'put your unique phrase here' );
    define( 'NONCE_KEY',        'put your unique phrase here' );
    define( 'AUTH_SALT',        'put your unique phrase here' );
    define( 'SECURE_AUTH_SALT', 'put your unique phrase here' );
    define( 'LOGGED_IN_SALT',   'put your unique phrase here' );
    define( 'NONCE_SALT',       'put your unique phrase here' );

    /**#@-*/

    /**
    * WordPress Database Table prefix.
    *
    * You can have multiple installations in one database if you give each
    * a unique prefix. Only numbers, letters, and underscores please!
    */
    $table_prefix = 'wp_';

    /**
    * For developers: WordPress debugging mode.
    *
    * Change this to true to enable the display of notices during development.
    * It is strongly recommended that plugin and theme developers use WP_DEBUG
    * in their development environments.
    *
    * For information on other constants that can be used for debugging,
    * visit the documentation.
    *
    * @link https://wordpress.org/support/article/debugging-in-wordpress/
    */
    define( 'WP_DEBUG', false );

    /* That's all, stop editing! Happy publishing. */

    /** Absolute path to the WordPress directory. */
    if ( ! defined( 'ABSPATH' ) ) {
      define( 'ABSPATH', __DIR__ . '/' );
    }

    /** Sets up WordPress vars and included files. */
    require_once ABSPATH . 'wp-settings.php';
