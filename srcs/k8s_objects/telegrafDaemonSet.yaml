apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: telegraf
  namespace: default
  labels:
    app: telegraf
spec:
  selector:
    matchLabels:
      name: telegraf
  template:
    metadata:
      labels:
        name: telegraf
    spec:
      volumes:
      - name: sys
        hostPath:
          path: /sys
      - name: proc
        hostPath:
          path: /proc
      - name: utmp
        hostPath:
          path: /var/run/utmp
      - name: docker-socket
        hostPath:
          path: /var/run/docker.sock
      - name: config
        configMap:
          name: telegraf-daemon-set
      containers:
      - name: telegraf
        image: my-telegraf
        imagePullPolicy: Never
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOSTNAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: "HOST_PROC"
          value: "/rootfs/proc"
        - name: "HOST_SYS"
          value: "/rootfs/sys"
        - name: MONITOR_HOST
          value: http://influxdb:8086
        - name: MONITOR_USERNAME
          valueFrom:
            secretKeyRef:
              name: influxdb-secrets
              key: INFLUXDB_USER
        - name: MONITOR_PASSWORD
          valueFrom:
            secretKeyRef:
              name: influxdb-secrets
              key: INFLUXDB_USER_PASSWORD
        - name: MONITOR_DATABASE
          valueFrom:
            secretKeyRef:
              name: influxdb-secrets
              key: INFLUXDB_DB
        volumeMounts:
        - name: sys
          mountPath: /rootfs/sys
          readOnly: true
        - name: proc
          mountPath: /rootfs/proc
          readOnly: true
        - name: utmp
          mountPath: /var/run/utmp
          readOnly: true
        - name: docker-socket
          mountPath: /var/run/docker.sock
        - name: config
          mountPath: /etc/telegraf
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: telegraf-daemon-set
  namespace: default
  labels:
    app: telegraf
data:
  telegraf.conf: |
    [global_tags]
      project = "ft_services"
    [agent]
      hostname = "${HOSTNAME}"
      debug = true
      quiet = false

    #################### OUTPUT ###########################
    [[outputs.influxdb]]
      urls = ["${MONITOR_HOST}"]
      database = "${MONITOR_DATABASE}" 
      username = "${MONITOR_USERNAME}"
      password = "${MONITOR_PASSWORD}"
      timeout = "5s"
      
    ##################### INPUT ###########################
    [[inputs.cpu]]
      percpu = true
      totalcpu = true
      collect_cpu_time = false
      report_active = false
      # fielddrop = ["usage_irq","cpu","host","project","usage_steal","usage_guest","usage_gest_nice","usage_nice"]
    [[inputs.disk]]
      ignore_fs = ["tmpfs", "devtmpfs", "devfs"]
    [[inputs.diskio]]
    [[inputs.kernel]]
    [[inputs.mem]]
    [[inputs.processes]]
    [[inputs.swap]]
    [[inputs.system]]
    # [[inputs.docker]]
    #   endpoint = "unix:///var/run/docker.sock"
    [[inputs.kubernetes]]
      ## URL for the kubelet
      url = "https://${NODE_NAME}:10250"
      bearer_token = "/var/run/secrets/kubernetes.io/serviceaccount/token"
      insecure_skip_verify = true

      ## Use bearer token for authorization. ('bearer_token' takes priority)
      ## If both of these are empty, we'll use the default serviceaccount:
      ## at: /run/secrets/kubernetes.io/serviceaccount/token
      # bearer_token = "/path/to/bearer/token"
      ## OR
      # bearer_token_string = "abc_123"

      ## Pod labels to be added as tags.  An empty array for both include and
      ## exclude will include all labels.
      # label_include = []
      # label_exclude = ["*"]

      ## Set response_timeout (default 5 seconds)
      response_timeout = "5s"

      ## Optional TLS Config
      # tls_ca = /path/to/cafile
      # tls_cert = /path/to/certfile
      # tls_key = /path/to/keyfile
      ## Use TLS but skip chain & host verification
      # insecure_skip_verify = false    
