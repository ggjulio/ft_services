apiVersion: v1
kind: Service
metadata:
  name: phpmyadmin
  labels:
    app: phpmyadmin
    env: learning
  annotations:
    metallb.universe.tf/allow-shared-ip: "true"
spec:
  type: LoadBalancer
  ports:
    - name: https
      port: 5000
      targetPort: 443
  selector:
    app: phpmyadmin
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: phpmyadmin
    env: learning
  name: phpmyadmin
spec:
  replicas: 1
  selector:
    matchLabels:
      app: phpmyadmin
  template:
    metadata:
      labels:
        app: phpmyadmin
        env: learning
    spec:
      volumes:
        - name: nginx-config-phpmyadmin
          configMap:
              name: nginx-config-phpmyadmin
        - name: phpmyadmin-config
          configMap:
              name: phpmyadmin-config
        - name: workdir
          emptyDir: {}
      shareProcessNamespace: true
      containers:
        - name: nginx
          image: my-nginx
          imagePullPolicy: Never
          ports:
          - containerPort: 443
            name : https
          volumeMounts:
            - mountPath: /etc/nginx/conf.d/
              name: nginx-config-phpmyadmin
              readOnly: true
            - name: workdir
              mountPath: /var/www/app
        - name: php-fpm
          image: my-php-fpm
          imagePullPolicy: Never
          ports:
          - containerPort: 9000
            name : tcp
          volumeMounts:
            - name: workdir
              mountPath: /var/www/app
      initContainers:
        - name: install-phpmyadmin
          image: alpine
          command: ['sh', '-c',
          "   echo Downloading phpMyAdmin...;
              wget -q -O - https://files.phpmyadmin.net/phpMyAdmin/5.0.4/phpMyAdmin-5.0.4-all-languages.tar.gz | tar -xz -C /work-dir/ --strip-components=1
              && cp -f /phpmyadmin-config/config.inc.php /work-dir;
              echo done"
          ]
          volumeMounts:
            - name: workdir
              mountPath: "/work-dir"
            - name: phpmyadmin-config
              mountPath: "/phpmyadmin-config"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config-phpmyadmin
  labels:
    app: phpmyadmin
    env: learning 
data:
  default.conf: |
    # Upstream to abstract backend connection(s) for php
    upstream php {
        server unix:/tmp/php-cgi.socket;
        server 127.0.0.1:9000;
    }

    server {
        listen 443 ssl; # http2; http2 not supported for reverse proxy
        listen [::]:443 ssl; # http2;

        ssl_certificate      /etc/ssl/certs/nginx-selfsigned.crt;
        ssl_certificate_key  /etc/ssl/private/nginx-selfsigned.key;
        ssl_protocols        SSLv3 TLSv1.3;
        ssl_ciphers          HIGH:!aNULL:!MD5;

        error_page		497	https://$host:5000$request_uri;   #redirect  when 400 code error

        root /var/www/app;
        index index.php index.html;

        location / {
                  autoindex off;
        }

        location ~ \.php$ {
                  # NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini
                  include fastcgi_params;
                  fastcgi_intercept_errors on;
                  fastcgi_pass php;
                  # The following parameter can be also included in fastcgi_params file
                  fastcgi_param  SCRIPT_FILENAME $document_root$fastcgi_script_name;
        }

    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: phpmyadmin-config
  labels:
    app: phpmyadmin
    env: learning 
data:
  config.inc.php: |
    <?php
    /**
    * phpMyAdmin sample configuration, you can use it as base for
    * manual configuration. For easier setup you can use setup/
    *
    * All directives are explained in documentation in the doc/ folder
    * or at <https://docs.phpmyadmin.net/>.
    */

    declare(strict_types=1);

    /**
    * This is needed for cookie based authentication to encrypt password in
    * cookie. Needs to be 32 chars long.
    */
    $cfg['blowfish_secret'] = ''; /* YOU MUST FILL IN THIS FOR COOKIE AUTH! */

    /**
    * Servers configuration
    */
    $i = 0;

    /**
    * First server
    */
    $i++;
    /* Authentication type */
    $cfg['Servers'][$i]['auth_type'] = 'cookie';
    /* Server parameters */
    $cfg['Servers'][$i]['host'] = 'mysql';
    $cfg['Servers'][$i]['compress'] = false;
    $cfg['Servers'][$i]['AllowNoPassword'] = false;

    /**
    * phpMyAdmin configuration storage settings.
    */

    /* User used to manipulate with storage */
    // $cfg['Servers'][$i]['controlhost'] = '';
    // $cfg['Servers'][$i]['controlport'] = '';
    // $cfg['Servers'][$i]['controluser'] = 'pma';
    // $cfg['Servers'][$i]['controlpass'] = 'pmapass';

    /* Storage database and tables */
    // $cfg['Servers'][$i]['pmadb'] = 'phpmyadmin';
    // $cfg['Servers'][$i]['bookmarktable'] = 'pma__bookmark';
    // $cfg['Servers'][$i]['relation'] = 'pma__relation';
    // $cfg['Servers'][$i]['table_info'] = 'pma__table_info';
    // $cfg['Servers'][$i]['table_coords'] = 'pma__table_coords';
    // $cfg['Servers'][$i]['pdf_pages'] = 'pma__pdf_pages';
    // $cfg['Servers'][$i]['column_info'] = 'pma__column_info';
    // $cfg['Servers'][$i]['history'] = 'pma__history';
    // $cfg['Servers'][$i]['table_uiprefs'] = 'pma__table_uiprefs';
    // $cfg['Servers'][$i]['tracking'] = 'pma__tracking';
    // $cfg['Servers'][$i]['userconfig'] = 'pma__userconfig';
    // $cfg['Servers'][$i]['recent'] = 'pma__recent';
    // $cfg['Servers'][$i]['favorite'] = 'pma__favorite';
    // $cfg['Servers'][$i]['users'] = 'pma__users';
    // $cfg['Servers'][$i]['usergroups'] = 'pma__usergroups';
    // $cfg['Servers'][$i]['navigationhiding'] = 'pma__navigationhiding';
    // $cfg['Servers'][$i]['savedsearches'] = 'pma__savedsearches';
    // $cfg['Servers'][$i]['central_columns'] = 'pma__central_columns';
    // $cfg['Servers'][$i]['designer_settings'] = 'pma__designer_settings';
    // $cfg['Servers'][$i]['export_templates'] = 'pma__export_templates';

    /**
    * End of servers configuration
    */

    /**
    * Directories for saving/loading files from server
    */
    $cfg['UploadDir'] = '';
    $cfg['SaveDir'] = '';

    /**
    * Whether to display icons or text or both icons and text in table row
    * action segment. Value can be either of 'icons', 'text' or 'both'.
    * default = 'both'
    */
    //$cfg['RowActionType'] = 'icons';

    /**
    * Defines whether a user should be displayed a "show all (records)"
    * button in browse mode or not.
    * default = false
    */
    //$cfg['ShowAll'] = true;

    /**
    * Number of rows displayed when browsing a result set. If the result
    * set contains more rows, "Previous" and "Next".
    * Possible values: 25, 50, 100, 250, 500
    * default = 25
    */
    //$cfg['MaxRows'] = 50;

    /**
    * Disallow editing of binary fields
    * valid values are:
    *   false    allow editing
    *   'blob'   allow editing except for BLOB fields
    *   'noblob' disallow editing except for BLOB fields
    *   'all'    disallow editing
    * default = 'blob'
    */
    //$cfg['ProtectBinary'] = false;

    /**
    * Default language to use, if not browser-defined or user-defined
    * (you find all languages in the locale folder)
    * uncomment the desired line:
    * default = 'en'
    */
    //$cfg['DefaultLang'] = 'en';
    //$cfg['DefaultLang'] = 'de';

    /**
    * How many columns should be used for table display of a database?
    * (a value larger than 1 results in some information being hidden)
    * default = 1
    */
    //$cfg['PropertiesNumColumns'] = 2;

    /**
    * Set to true if you want DB-based query history.If false, this utilizes
    * JS-routines to display query history (lost by window close)
    *
    * This requires configuration storage enabled, see above.
    * default = false
    */
    //$cfg['QueryHistoryDB'] = true;

    /**
    * When using DB-based query history, how many entries should be kept?
    * default = 25
    */
    //$cfg['QueryHistoryMax'] = 100;

    /**
    * Whether or not to query the user before sending the error report to
    * the phpMyAdmin team when a JavaScript error occurs
    *
    * Available options
    * ('ask' | 'always' | 'never')
    * default = 'ask'
    */
    //$cfg['SendErrorReports'] = 'always';

    /**
    * You can find more configuration options in the documentation
    * in the doc/ folder or at <https://docs.phpmyadmin.net/>.
    */
