apiVersion: v1
kind: Service
metadata:
  name: phpmyadmin
  labels:
    app: phpmyadmin
    env: learning
  annotations:
    metallb.universe.tf/allow-shared-ip: "true"
spec:
  type: LoadBalancer
  ports:
    - name: https
      port: 5000
      targetPort: 443
  selector:
    app: phpmyadmin
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: phpmyadmin
    env: learning
  name: phpmyadmin
spec:
  replicas: 1
  selector:
    matchLabels:
      app: phpmyadmin
  template:
    metadata:
      labels:
        app: phpmyadmin
        env: learning
    spec:
      volumes:
        - name: nginx-config-phpmyadmin
          configMap:
              name: nginx-config-phpmyadmin
        - name: workdir
          emptyDir: {}
      shareProcessNamespace: true
      containers:
        - name: nginx
          image: my-nginx
          imagePullPolicy: Never
          ports:
          - containerPort: 443
            name : https
          volumeMounts:
            - mountPath: /etc/nginx/conf.d/
              name: nginx-config-phpmyadmin
              readOnly: true
            - name: workdir
              mountPath: /var/www/app
        - name: php-fpm
          image: my-php-fpm
          imagePullPolicy: Never
          ports:
          - containerPort: 9000
            name : tcp
          volumeMounts:
            - name: workdir
              mountPath: /var/www/app
      initContainers:
        - name: install-phpmyadmin
          image: alpine
          imagePullPolicy: Never
          command: ['sh', '-c',
           "wget -q -O - https://files.phpmyadmin.net/phpMyAdmin/5.0.4/phpMyAdmin-5.0.4-all-languages.tar.gz | tar -xz -C /work-dir/ --strip-components=1"]
          volumeMounts:
            - name: workdir
              mountPath: "/work-dir"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config-phpmyadmin
  labels:
    app: phpmyadmin
    env: learning 
data:
  default.conf: |
    # Upstream to abstract backend connection(s) for php
    upstream php {
        server unix:/tmp/php-cgi.socket;
        server 127.0.0.1:9000;
    }

    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;

        ssl_certificate      /etc/ssl/certs/nginx-selfsigned.crt;
        ssl_certificate_key  /etc/ssl/private/nginx-selfsigned.key;
        ssl_protocols        SSLv3 TLSv1.3;
        ssl_ciphers          HIGH:!aNULL:!MD5;

        error_page		497	https://$host:5000$request_uri;   #redirect  when 400 code error

        root /var/www/app;
        index index.php index.html;

        #server_name localhost;

        location / {
                  autoindex off;
        }

        location ~ \.php$ {
                  # NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini
                  include fastcgi_params;
                  fastcgi_intercept_errors on;
                  fastcgi_pass php;
                  # The following parameter can be also included in fastcgi_params file
                  fastcgi_param  SCRIPT_FILENAME $document_root$fastcgi_script_name;
        }

    }
