apiVersion: v1
kind: Service
metadata:
  name: grafana
  labels:
    app: grafana
    env: learning
  annotations:
    metallb.universe.tf/allow-shared-ip: "ft_services"
spec:
  type: LoadBalancer
  ports:
    - port: 3000
      targetPort: 3000
  selector:
    app: grafana
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-pv-claim
  labels:
    app: ftps
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: grafana
    env: learning
  name: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
        env: learning
    spec:
      volumes:
        - name: grafana-pv
          persistentVolumeClaim:
              claimName: grafana-pv-claim
      containers:
      - name: grafana
        image: my-grafana
        imagePullPolicy: Never
        ports:
        - containerPort: 3000
        volumeMounts:
          - mountPath: /grafana/data
            name: grafana-pv
      initContainers:
      - name: copy-backup-grafana-database
        image: alpine
        command: ['sh', '-c',
        ' if [ "$(ls -A /work-dir)" ]; then echo "backup already copied"; exit 0; fi; echo "Persistent volume empty, mv backup to grafana...";
          wget -q -O /work-dir/grafana.db  https://github.com/ggjulio/ft_services/releases/download/0.1.0/grafana.db;
          echo "Done."
        ']
        volumeMounts:
        - mountPath: /work-dir
          name: grafana-pv
